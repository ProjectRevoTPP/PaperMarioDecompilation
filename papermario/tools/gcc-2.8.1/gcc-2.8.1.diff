diff -crN gcc-2.8.1.org/cccp.c gcc-2.8.1/cccp.c
*** gcc-2.8.1.org/cccp.c	Thu Feb 26 21:38:59 1998
--- gcc-2.8.1/cccp.c	Mon Feb 22 22:36:38 1999
***************
*** 1163,1168 ****
--- 1163,1204 ----
     retrying if necessary, and treating any real error as fatal.
     If MAX_WRITE_LEN is defined, write at most that many bytes at a time.  */
  
+ #ifdef NU64
+ enum { KANJI_OFF = 0, KANJI_SJIS, KANJI_EUC };
+ static n64kanji_flag = KANJI_OFF;	/* by default, KANJI OFF mode */
+ #define KANJIENV "N64GCC_KANJI"
+ static void
+ kanjienv_check ()
+ {
+   char  *n64kanji_env;
+   n64kanji_env = getenv("N64GCC_KANJI");
+   if ( !strcasecmp( n64kanji_env, "SJIS" ) ) {
+     n64kanji_flag = KANJI_SJIS;
+   } else if ( !strcasecmp( n64kanji_env, "EUC" ) ) {
+     n64kanji_flag = KANJI_EUC;
+   } else if ( !strcasecmp( n64kanji_env, "OFF" ) ) {
+     n64kanji_flag = KANJI_OFF;
+   }
+ }
+ 
+ static int
+ iskanji1( c )
+      U_CHAR c;
+ {
+   switch ( n64kanji_flag ) {
+   case KANJI_OFF:
+     return 0;
+   case KANJI_EUC:
+     return (c >= 0xa1 && c <= 0xfe);
+   case KANJI_SJIS:
+   default:
+     return (c >= 0x81 && c <= 0x9f) || (c >= 0xe0 && c <= 0xfc);
+   }
+ }
+ 
+ #endif	/* NU64 */
+ 
+ 
  static void
  safe_write (desc, ptr, len)
       int desc;
***************
*** 1171,1176 ****
--- 1207,1245 ----
  {
    int wcount, written;
  
+ #ifdef NU64
+   U_CHAR *rptr, *wbuf, *wptr;
+   int tlen, rlen = len;
+ 
+   if(n64kanji_flag != KANJI_OFF) {
+     rptr = ptr, wptr = NULL;
+     while(rlen--) {
+       U_CHAR c = *rptr++;
+       if (wptr) {
+ 	int wlen = wptr - wbuf;
+ 	if (tlen <= wlen + 8) {
+ 	  wbuf = (char *)realloc(wbuf, tlen += 0x1000);
+ 	  wptr = wbuf + wlen;
+ 	}
+       }
+       if ( iskanji1( c ) ) {
+ 	if (!wptr) {
+ 	  wbuf = (char *)malloc(tlen = len + 0x1000);
+ 	  memcpy(wbuf, ptr, len - rlen -1);
+ 	  wptr = wbuf + len - rlen - 1;
+         }
+ 	sprintf(wptr, "\\%03o", c), wptr += 4;
+ 	if (rlen--) sprintf(wptr, "\\%03o", *rptr++), wptr += 4;
+       } else {
+ 	if (wptr) *wptr++ = c;
+       }
+     }
+     if (wptr) {
+       ptr = wbuf;
+       len = wptr - wbuf;
+     }
+   }
+ #endif
    while (len > 0) {
      wcount = len;
  #ifdef MAX_WRITE_LEN
***************
*** 1191,1196 ****
--- 1260,1290 ----
    }
  }
  
+ #ifdef	NU64
+ void
+ nu64cutcr(bufp, lenp)
+ char **bufp;
+ int *lenp;
+ {
+   char  *wptr, *rptr, *n64cutcr_env;
+   int    wsize = *lenp;
+   static n64cutcr_flag = -1;
+ 
+   if (n64cutcr_flag == -1) {
+     n64cutcr_env = getenv("N64GCC_CUTCR");
+     n64cutcr_flag = (n64cutcr_env && !strcasecmp(n64cutcr_env, "ON") ? 1:0);
+   }
+   if (n64cutcr_flag) {
+     wptr = rptr = *bufp;
+     while(wsize--) {
+       if (*rptr == 0x0d && rptr[1] == 0x0a && wsize) rptr++, wsize--, (*lenp)--;
+       *wptr++ = *rptr++;
+     }
+     if ((*bufp)[(*lenp)-1] == 0x1a) (*bufp)[--(*lenp)] = '\0';
+   }
+ }
+ #endif
+ 
  int
  main (argc, argv)
       int argc;
***************
*** 1876,1881 ****
--- 1970,1979 ----
      }
    }
  
+ #ifdef NU64
+   kanjienv_check();
+ #endif
+ 
    append_include_chain (before_system, last_before_system);
    first_system_include = before_system;
  
***************
*** 2107,2112 ****
--- 2205,2213 ----
        fp->buf = (U_CHAR *) xrealloc (fp->buf, bsize + 2);
      }
      fp->length = size;
+ #ifdef	NU64
+     nu64cutcr(&fp->buf, &fp->length);
+ #endif
    } else {
      /* Read a file whose size we can determine in advance.
         For the sake of VMS, st.st_size is just an upper bound.  */
***************
*** 2116,2121 ****
--- 2217,2225 ----
      fp->buf = (U_CHAR *) xmalloc (s + 2);
      fp->length = safe_read (f, (char *) fp->buf, s);
      if (fp->length < 0) goto perror;
+ #ifdef	NU64
+     nu64cutcr(&fp->buf, &fp->length);
+ #endif
    }
    fp->bufp = fp->buf;
    fp->if_stack = if_stack;
***************
*** 2788,2793 ****
--- 2892,2903 ----
  	  break;
  	}
  	*obp++ = *ibp;
+ #ifdef NU64
+ 	if ( iskanji1(*ibp) ) {
+ 	  ibp++, *obp++ = *ibp++;
+ 	  continue;
+ 	}
+ #endif
  	switch (*ibp++) {
  	case '\n':
  	  ++ip->lineno;
***************
*** 2870,2876 ****
--- 2980,2990 ----
  
  	  while (++ibp < limit) {
  	    if (*ibp == '\n') {
+ #ifdef NU64
+ 	      if (ibp[-1] != '\\' || iskanji1( ibp[-2] )) {
+ #else
  	      if (ibp[-1] != '\\') {
+ #endif
  		if (put_out_comments) {
  		  bcopy ((char *) before_bp, (char *) obp, ibp - before_bp);
  		  obp += ibp - before_bp;
***************
*** 3352,3358 ****
--- 3466,3477 ----
  			} else if (! traditional) {
  			  *obp++ = ' ';
  			}
+ #ifdef NU64
+ 			for (ibp += 2; *ibp != '\n' || ibp[-1] == '\\' ||
+ 			       !iskanji1( ibp[-2] ); ibp++)
+ #else
  			for (ibp += 2; *ibp != '\n' || ibp[-1] == '\\'; ibp++)
+ #endif
  			  if (put_out_comments)
  			    *obp++ = *ibp;
  		      } else
***************
*** 5057,5062 ****
--- 5176,5184 ----
         on the number of bytes we can read.  */
      fp->length = safe_read (f, (char *) fp->buf, s);
      if (fp->length < 0) goto nope;
+ #ifdef	NU64
+     nu64cutcr(&fp->buf, &fp->length);
+ #endif
    }
    else if (S_ISDIR (inc->st.st_mode)) {
      error ("directory `%s' specified in #include", fname);
***************
*** 5084,5089 ****
--- 5206,5214 ----
      }
      fp->bufp = fp->buf;
      fp->length = st_size;
+ #ifdef	NU64
+     nu64cutcr(&fp->buf, &fp->length);
+ #endif
    }
  
    if ((fp->length > 0 && fp->buf[fp->length - 1] != '\n')
***************
*** 5177,5182 ****
--- 5302,5310 ----
        length = safe_read (pcf, buf, s);
        if (length < 0)
  	goto nope;
+ #ifdef	NU64
+     nu64cutcr(&buf, &length);
+ #endif
      }
    else
      abort ();
***************
*** 7645,7650 ****
--- 7773,7781 ----
        if (*bp == '\n') {
  	if (bp[-1] != '\\')
  	  break;
+ #ifdef NU64
+ 	if ( iskanji1( bp[-2] ) ) break;
+ #endif
  	if (!nowarn && warn_comments)
  	  warning ("multiline `//' comment");
  	if (line_counter)
diff -crN gcc-2.8.1.org/config/mips/nu64.h gcc-2.8.1/config/mips/nu64.h
*** gcc-2.8.1.org/config/mips/nu64.h	Thu Jan  1 09:00:00 1970
--- gcc-2.8.1/config/mips/nu64.h	Wed Jun 24 18:12:58 1998
***************
*** 0 ****
--- 1,132 ----
+ /* Definitions of target machine for GNU compiler.  MIPS GNU Hurd version.
+    Copyright (C) 1995, 1996 Free Software Foundation, Inc.
+ 
+ This file is part of GNU CC.
+ 
+ GNU CC is free software; you can redistribute it and/or modify
+ it under the terms of the GNU General Public License as published by
+ the Free Software Foundation; either version 2, or (at your option)
+ any later version.
+ 
+ GNU CC is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ 
+ You should have received a copy of the GNU General Public License
+ along with GNU CC; see the file COPYING.  If not, write to
+ the Free Software Foundation, 59 Temple Place - Suite 330,
+ Boston, MA 02111-1307, USA.  */
+ 
+ #include <mips/gnu.h>
+ #include <dbx.h>
+ 
+ #define MIPS_ISA_DEFAULT 3
+ #define	MIPS_CPU_STRING_DEFAULT "4300"
+ #undef TARGET_DEFAULT
+ #define TARGET_DEFAULT ( MASK_GAS | MASK_4300_MUL_FIX )
+ 
+ #undef CPP_PREDEFINES
+ #define CPP_PREDEFINES GNU_CPP_PREDEFINES("mips") \
+ " -DMIPSEB -DR4000 -DR4300 -D_MIPSEB -D_R4000 -D_R4300 \
+ -D_MIPS_SZINT=32 -D_MIPS_SZLONG=32 -D_MIPS_SZPTR=32"
+ 
+ #undef	LOCAL_LABEL_PREFIX
+ #define	LOCAL_LABEL_PREFIX	"."
+ 
+ /* Enable debugging.  */
+ 
+ #undef	ASM_FILE_END
+ #undef	DBX_OUTPUT_MAIN_SOURCE_FILE_END
+ 
+ #undef	PREFERRED_DEBUGGING_TYPE
+ #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG
+ 
+ #undef	DWARF_DEBUGGING_INFO
+ #define DBX_DEBUGGING_INFO
+ #if 0
+ #define SDB_DEBUGGING_INFO
+ #define MIPS_DEBUGGING_INFO
+ /* GNU as does handle DWARF2 directives.  */
+ #undef DWARF2_UNWIND_INFO
+ #define DWARF2_UNWIND_INFO 1
+ 
+ #undef	ASM_OUTPUT_SOURCE_LINE
+ #define ASM_OUTPUT_SOURCE_LINE(STREAM, LINE)                            \
+   mips_output_lineno (STREAM, LINE)
+ #endif
+ 
+ #undef EXTRA_SECTIONS
+ #define EXTRA_SECTIONS in_const, in_ctors, in_dtors, in_sdata
+ 
+ #undef EXTRA_SECTION_FUNCTIONS
+ #define EXTRA_SECTION_FUNCTIONS						\
+   CONST_SECTION_FUNCTION						\
+   CTORS_SECTION_FUNCTION						\
+   DTORS_SECTION_FUNCTION						\
+   SDATA_SECTION_FUNCTION
+ 
+ #define SDATA_SECTION_FUNCTION						\
+ void									\
+ sdata_section ()							\
+ {									\
+   if (in_section != in_sdata)						\
+     {									\
+       fprintf (asm_out_file, "%s\n", SDATA_SECTION_ASM_OP);		\
+       in_section = in_sdata;						\
+     }									\
+ }
+ 
+ /* ASM_SPEC is the set of arguments to pass to the assembler.  */
+ #undef	ASM_SPEC
+ #define ASM_SPEC "\
+ %{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} %{mips4} \
+ %(subtarget_asm_optimizing_spec) \
+ %(subtarget_asm_debugging_spec) \
+ %{membedded-pic} \
+ %{mabi=32:-32}%{mabi=o32:-32}%{mabi=n32:-n32}%{mabi=64:-64}%{mabi=n64:-64} \
+ %(target_asm_spec) \
+ %(subtarget_asm_spec)"
+ 
+ #undef	LINK_SPEC
+ #define LINK_SPEC ""
+ 
+ #undef	CC1_SPEC
+ #define CC1_SPEC "\
+ %{gline:%{!g:%{!g0:%{!g1:%{!g2: -g1}}}}} \
+ %{mips1:-mfp32 -mgp32} %{mips2:-mfp32 -mgp32} %{mips3:-mfp32 -mgp32} \
+ %{mips4:%{!msingle-float:%{!m4650:-mfp64}} -mgp64} \
+ %{mfp64:%{msingle-float:%emay not use both -mfp64 and -msingle-float}} \
+ %{mfp64:%{m4650:%emay not use both -mfp64 and -m4650}} \
+ %{m4650:-mcpu=r4650} \
+ %{m3900:-mips1 -mcpu=r3900 -mfp32 -mgp32} \
+ %{G*} %{EB:-meb} %{EL:-mel} %{EB:%{EL:%emay not use both -EB and -EL}} \
+ %{pic-none:   -mno-half-pic} \
+ %{pic-lib:    -mhalf-pic} \
+ %{pic-extern: -mhalf-pic} \
+ %{pic-calls:  -mhalf-pic} \
+ %{save-temps: } \
+ %(subtarget_cc1_spec) "
+ 
+ #undef	CPP_SPEC
+ #define CPP_SPEC "\
+ %{.cc:  -D__LANGUAGE_C_PLUS_PLUS -D_LANGUAGE_C_PLUS_PLUS} \
+ %{.cxx: -D__LANGUAGE_C_PLUS_PLUS -D_LANGUAGE_C_PLUS_PLUS} \
+ %{.C:   -D__LANGUAGE_C_PLUS_PLUS -D_LANGUAGE_C_PLUS_PLUS} \
+ %{.m:   -D__LANGUAGE_OBJECTIVE_C -D_LANGUAGE_OBJECTIVE_C -D__LANGUAGE_C -D_LANGUAGE_C} \
+ %{.S:   -D__LANGUAGE_ASSEMBLY -D_LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \
+ %{.s:   -D__LANGUAGE_ASSEMBLY -D_LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \
+ %{!.S: %{!.s: %{!.cc: %{!.cxx: %{!.C: %{!.m: -D__LANGUAGE_C -D_LANGUAGE_C %{!ansi:-DLANGUAGE_C}}}}}}} \
+ %(subtarget_cpp_size_spec) \
+ %{mips3:-U__mips -D__mips=3} \
+ %{mips4:-U__mips -D__mips=4 -D__mips64} \
+ %{mgp32:-U__mips64} %{mgp64:-D__mips64} \
+ %{msingle-float:%{!msoft-float:-D__mips_single_float}} \
+ %{m4650:%{!msoft-float:-D__mips_single_float}} \
+ %{msoft-float:-D__mips_soft_float} \
+ %{mabi=eabi:-D__mips_eabi} \
+ %{EB:-UMIPSEL -U_MIPSEL -U__MIPSEL -U__MIPSEL__ -D_MIPSEB -D__MIPSEB -D__MIPSEB__ %{!ansi:-DMIPSEB}} \
+ %{EL:-UMIPSEB -U_MIPSEB -U__MIPSEB -U__MIPSEB__ -D_MIPSEL -D__MIPSEL -D__MIPSEL__ %{!ansi:-DMIPSEL}} \
+ %(long_max_spec) \
+ %(subtarget_cpp_spec) "
+ 
diff -crN gcc-2.8.1.org/config.sub gcc-2.8.1/config.sub
*** gcc-2.8.1.org/config.sub	Fri Feb 13 21:16:06 1998
--- gcc-2.8.1/config.sub	Mon Feb 22 22:07:30 1999
***************
*** 616,621 ****
--- 616,625 ----
          xps | xps100)
  		basic_machine=xps100-honeywell
  		;;
+ 	nu64)
+ 		basic_machine=mips-nintendo
+ 		os=-nu64
+ 		;;
  	none)
  		basic_machine=none-none
  		os=-none
***************
*** 775,780 ****
--- 779,787 ----
  	-xenix)
  		os=-xenix
  		;;
+ 	-nu64)
+ 		os=-nu64
+ 		;;
  	-none)
  		;;
  	*)
***************
*** 892,897 ****
--- 899,907 ----
  		;;
  	f301-fujitsu)
  		os=-uxpv
+ 		;;
+ 	*-nu64)
+ 		os=-nu64
  		;;
  	*)
  		os=-none
diff -crN gcc-2.8.1.org/configure gcc-2.8.1/configure
*** gcc-2.8.1.org/configure	Sun Mar  1 11:02:02 1998
--- gcc-2.8.1/configure	Mon Feb 22 22:07:41 1999
***************
*** 67,72 ****
--- 67,73 ----
  # Initialize some other variables.
  subdirs=
  MFLAGS= MAKEFLAGS=
+ DEFS=
  # Maximum number of lines to put in a shell here document.
  ac_max_here_lines=12
  
***************
*** 4483,4488 ****
--- 4484,4499 ----
  		;;
  	mips-*-gnu*)
  		;;
+ 	mips-nintendo-nu64)		# Nintendo NU64
+ 		xm_file=mips/xm-sysv.h
+ 		tm_file=mips/nu64.h
+ 		elf=yes
+ 		gnu_ld=yes
+ 		gas=yes
+                 xmake_file=mips/x-sysv
+                 tmake_file=mips/t-mips-gas
+ 		DEFS=-DNU64
+ 		;;
  	mipsel-*-ecoff*)
  		tm_file=mips/ecoffl.h
  		if [ x$stabs = xyes ]; then
***************
*** 5810,5816 ****
  
  trap 'rm -f $CONFIG_STATUS conftest*; exit 1' 1 2 15
  
! DEFS=-DHAVE_CONFIG_H
  
  # Without the "./", some shells look in PATH for config.status.
  : ${CONFIG_STATUS=./config.status}
--- 5821,5827 ----
  
  trap 'rm -f $CONFIG_STATUS conftest*; exit 1' 1 2 15
  
! DEFS="-DHAVE_CONFIG_H $DEFS"
  
  # Without the "./", some shells look in PATH for config.status.
  : ${CONFIG_STATUS=./config.status}
diff -crN gcc-2.8.1.org/prefix.c gcc-2.8.1/prefix.c
*** gcc-2.8.1.org/prefix.c	Fri Feb  6 23:04:22 1998
--- gcc-2.8.1/prefix.c	Wed Jul 22 22:50:15 1998
***************
*** 80,86 ****
  static char *concat		PVPROTO((char *, ...));
  static char *save_string	PROTO((char *, int));
  
! #ifdef _WIN32
  static char *lookup_key		PROTO((char *));
  static HKEY reg_key = (HKEY) INVALID_HANDLE_VALUE;
  #endif
--- 80,86 ----
  static char *concat		PVPROTO((char *, ...));
  static char *save_string	PROTO((char *, int));
  
! #if (defined(_WIN32) && !defined(__CYGWIN32__))
  static char *lookup_key		PROTO((char *));
  static HKEY reg_key = (HKEY) INVALID_HANDLE_VALUE;
  #endif
***************
*** 95,101 ****
  {
    char *prefix = 0;
  
! #ifdef _WIN32
    prefix = lookup_key (key);
  #endif
  
--- 95,101 ----
  {
    char *prefix = 0;
  
! #if (defined(_WIN32) && !defined(__CYGWIN32__))
    prefix = lookup_key (key);
  #endif
  
***************
*** 175,181 ****
    return result;
  }
  
! #ifdef _WIN32
  
  /* Look up "key" in the registry, as above.  */
  
--- 175,181 ----
    return result;
  }
  
! #if (defined(_WIN32) && !defined(__CYGWIN32__))
  
  /* Look up "key" in the registry, as above.  */
  
